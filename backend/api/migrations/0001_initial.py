# Generated by Django 5.2 on 2025-05-01 09:56

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('surname', models.CharField(blank=True, max_length=255)),
                ('nickname', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('adjectives', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='places', to='api.place')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.project')),
            ],
            options={
                'verbose_name_plural': 'Items',
            },
        ),
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('type', models.CharField(choices=[('CHARACTER', 'Character'), ('PLACE', 'Place'), ('ITEM', 'Item'), ('SCENE', 'Scene')], max_length=20)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ideas', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ideas', to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterArc',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arcs', to='api.character')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_arcs', to='api.project')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='api.project'),
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short_description', models.TextField()),
                ('external_conflict', models.TextField(blank=True)),
                ('interpersonal_conflict', models.TextField(blank=True)),
                ('internal_conflict', models.TextField(blank=True)),
                ('time_order', models.IntegerField(default=0)),
                ('characters', models.ManyToManyField(blank=True, related_name='scenes', to='api.character')),
                ('items', models.ManyToManyField(blank=True, related_name='scenes', to='api.items')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scenes', to='api.place')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('promise', models.TextField(blank=True)),
                ('plot', models.TextField(blank=True)),
                ('emotional_matter', models.TextField(blank=True)),
                ('universal_truth', models.TextField(blank=True)),
                ('logline', models.TextField(blank=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='api.project')),
            ],
            options={
                'verbose_name_plural': 'Stories',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0)),
                ('title', models.TextField()),
                ('content', models.TextField(blank=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='api.story')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
